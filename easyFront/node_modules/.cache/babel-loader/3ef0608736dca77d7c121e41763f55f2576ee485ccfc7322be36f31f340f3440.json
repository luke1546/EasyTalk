{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S10P12B307\\\\easyFront\\\\src\\\\components\\\\UI\\\\atoms\\\\Text\\\\Textbox.stories.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// 텍스트 상자의 React 컴포넌트 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textBox = ({\n  initialValue,\n  onChange\n}) => {\n  _s();\n  const [value, setValue] = useState(initialValue);\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    setValue(newValue);\n\n    // 부모 컴포넌트에 값 변경을 알리기 위한 콜백 호출\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: \"atom-text-box\" // 추가적인 스타일 클래스를 원자에 대한 클래스로 간주\n    ,\n    value: value,\n    onChange: handleInputChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// PropTypes를 사용하여 컴포넌트의 속성에 대한 타입 검사\n_s(textBox, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\ntextBox.propTypes = {\n  initialValue: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default textBox;","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","textBox","initialValue","onChange","_s","value","setValue","useState","handleInputChange","event","newValue","target","type","className","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","string","func"],"sources":["C:/Users/SSAFY/Desktop/S10P12B307/easyFront/src/components/UI/atoms/Text/Textbox.stories.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// 텍스트 상자의 React 컴포넌트 정의\r\nconst textBox = ({ initialValue, onChange }) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    // 부모 컴포넌트에 값 변경을 알리기 위한 콜백 호출\r\n    if (onChange) {\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"atom-text-box\" // 추가적인 스타일 클래스를 원자에 대한 클래스로 간주\r\n      value={value}\r\n      onChange={handleInputChange}\r\n    />\r\n  );\r\n};\r\n\r\n// PropTypes를 사용하여 컴포넌트의 속성에 대한 타입 검사\r\ntextBox.propTypes = {\r\n  initialValue: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default textBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACL,YAAY,CAAC;EAEhD,MAAMM,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACN,KAAK;IACnCC,QAAQ,CAACI,QAAQ,CAAC;;IAElB;IACA,IAAIP,QAAQ,EAAE;MACZA,QAAQ,CAACO,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,oBACEV,OAAA;IACEY,IAAI,EAAC,MAAM;IACXC,SAAS,EAAC,eAAe,CAAC;IAAA;IAC1BR,KAAK,EAAEA,KAAM;IACbF,QAAQ,EAAEK;EAAkB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEN,CAAC;;AAED;AAAAb,EAAA,CAvBMH,OAAO;AAwBbA,OAAO,CAACiB,SAAS,GAAG;EAClBhB,YAAY,EAAEJ,SAAS,CAACqB,MAAM;EAC9BhB,QAAQ,EAAEL,SAAS,CAACsB;AACtB,CAAC;AAED,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}