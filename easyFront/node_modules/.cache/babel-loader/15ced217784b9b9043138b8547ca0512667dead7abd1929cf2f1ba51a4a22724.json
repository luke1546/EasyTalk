{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S10P12B307\\\\easyFront\\\\src\\\\components\\\\UI\\\\atoms\\\\Text\\\\Textbox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Textbox = ({\n  type,\n  text,\n  color\n}) => {\n  let style = {};\n  switch (type) {\n    case 'acceptText':\n      style = {\n        color: 'green'\n      };\n      break;\n    case 'cancelText':\n    case 'denyText':\n      style = {\n        color: 'red'\n      };\n      break;\n    default:\n      style = {};\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"atom-text-box\",\n    style: style,\n    children: type === 'doubleText' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_c = Textbox;\nTextbox.propTypes = {\n  type: PropTypes.oneOf(['noticeText', 'singleText', 'doubleText', 'logoText', 'acceptText', 'cancelText', 'denyText']).isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\nTextbox.defaultProps = {\n  color: 'black'\n};\nexport default Textbox;\n;\nTextbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Textbox\",\n  \"props\": {\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'black'\",\n        \"computed\": false\n      },\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false\n    },\n    \"type\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'noticeText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'singleText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'doubleText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'logoText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'acceptText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'cancelText'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'denyText'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true\n    },\n    \"text\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Textbox\");","map":{"version":3,"names":[],"sources":[""],"sourcesContent":[null],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}