{"version":3,"file":"components-UI-atoms-Text-Textbox-stories.3e0be5f912018dc7f599.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAAA;AAvBA;AAwBA;AACA;AACA;AACA;AAEA;AAAA;AAAA","sources":["webpack://front/./src/components/UI/atoms/Text/Textbox.js"],"sourcesContent":["// TextBox.js\r\n\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// 텍스트 상자의 React 컴포넌트 정의\r\nconst TextBox = ({ initialValue, onChange }) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleInputChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    // 부모 컴포넌트에 값 변경을 알리기 위한 콜백 호출\r\n    if (onChange) {\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"atom-text-box\" // 추가적인 스타일 클래스를 원자에 대한 클래스로 간주\r\n      value={value}\r\n      onChange={handleInputChange}\r\n    />\r\n  );\r\n};\r\n\r\n// PropTypes를 사용하여 컴포넌트의 속성에 대한 타입 검사\r\nTextBox.propTypes = {\r\n  initialValue: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Textbox;\r\n"],"names":[],"sourceRoot":""}